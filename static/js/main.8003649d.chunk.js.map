{"version":3,"sources":["components/drumPad.js","Loops/SilentStar_120_Em_OrganSynth.mp3","Loops/PAS3GROOVE1.03B.mp3","Loops/MazePolitics_120_Perc.mp3","Loops/FUD_120_StompySlosh.mp3","Loops/electric guitar coutry slide 120bpm - B.mp3","Loops/Bass Warwick heavy funk groove on E 120 BPM.mp3","Loops/120_stutter_breakbeats_16.mp3","Loops/120_future_funk_beats_25.mp3","App.js","Loops/GrooveB_120bpm_Tanggu.mp3","reportWebVitals.js","index.js"],"names":["DrumPad","props","state","stateMode","audio","addToQue","black","checked","playArray","handleClick","bind","e","this","changeColor","setState","btn_class","disabled","className","onClick","React","Component","sounds","key","mp3","future_funk","stutter","heavy_funk","electric_guitar","StompySlosh","MazePolitics","PAS3GROOVE1","SilentStar","App","playIt","value","console","log","play","stopIt","pause","Map","musicLoop","setInterval","undefined","song","handleChange","onPlay","onStop","forEach","iterator1","Symbol","iterator","src","clearInterval","songUrl","has","get","delete","set","Audio","id","style","position","left","top","transform","onChange","div","map","sound","idx","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8003649d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {Button} from 'antd';\r\n\r\nexport default class DrumPad extends React.Component {\r\n\r\n    //Reload from props to state\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            stateMode: props.stateMode,\r\n            audio: props.audio,\r\n            addToQue: props.addToQue,\r\n            black: props.checked,\r\n            playArray:props.playArray,\r\n        }\r\n\r\n    this.handleClick = this.handleClick.bind(this)\r\n    }\r\n\r\n    //Handel pad click = > change color and add to main map if dosnt exist, else - remove from main map\r\n    handleClick(e){\r\n        this.changeColor()\r\n        this.state.addToQue(this.state.audio)\r\n    }\r\n\r\n    //Changing pad color when clicked.\r\n    changeColor(){\r\n        this.setState({black: !this.state.black})\r\n    }\r\n    //Render pad when button class depends on on\\off pad state and changing css settings.\r\n    render() {\r\n        let btn_class = this.state.black ? \"drum-pad1\" : \"drum-pad\";\r\n        btn_class= this.props.stateMode ? btn_class : \"drum-pad\";\r\n        return (\r\n            <div>\r\n                <Button disabled = {!this.props.stateMode} className= {btn_class} onClick={this.handleClick} >\r\n                </Button>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/SilentStar_120_Em_OrganSynth.f2d668af.mp3\";","export default __webpack_public_path__ + \"static/media/PAS3GROOVE1.03B.f77c6da4.mp3\";","export default __webpack_public_path__ + \"static/media/MazePolitics_120_Perc.2d08c654.mp3\";","export default __webpack_public_path__ + \"static/media/FUD_120_StompySlosh.27bdc145.mp3\";","export default __webpack_public_path__ + \"static/media/electric guitar coutry slide 120bpm - B.230fcab8.mp3\";","export default __webpack_public_path__ + \"static/media/Bass Warwick heavy funk groove on E 120 BPM.52c24c81.mp3\";","export default __webpack_public_path__ + \"static/media/120_stutter_breakbeats_16.37c82282.mp3\";","export default __webpack_public_path__ + \"static/media/120_future_funk_beats_25.5eb417fc.mp3\";","import './App.css';\nimport React, { useEffect, useState } from 'react';\nimport Switch from \"react-switch\";\nimport DrumPad from \"./components/drumPad\";\nimport SilentStar from \"./Loops/SilentStar_120_Em_OrganSynth.mp3\";\nimport PAS3GROOVE1 from \"./Loops/PAS3GROOVE1.03B.mp3\";\nimport MazePolitics from \"./Loops/MazePolitics_120_Perc.mp3\";\nimport StompySlosh from \"./Loops/FUD_120_StompySlosh.mp3\";\nimport electric_guitar from \"./Loops/electric guitar coutry slide 120bpm - B.mp3\";\nimport heavy_funk from \"./Loops/Bass Warwick heavy funk groove on E 120 BPM.mp3\";\nimport stutter from \"./Loops/120_stutter_breakbeats_16.mp3\";\nimport future_funk from \"./Loops/120_future_funk_beats_25.mp3\";\nimport tango from \"./Loops/GrooveB_120bpm_Tanggu.mp3\";\nconst sounds = [\n    {\n        key: 't',\n        mp3: tango\n    },\n    {\n        key: 'W',\n        mp3: future_funk\n    },\n    {\n        key: 'E',\n        mp3: stutter\n    },\n    {\n        key: 'A',\n        mp3: heavy_funk\n    },\n    {\n        key: 'S',\n        mp3: electric_guitar\n    },\n    {\n        key: 'D',\n        mp3: StompySlosh\n    },\n    {\n        key: 'Z',\n        mp3: MazePolitics\n    },\n    {\n        key: 'X',\n        mp3: PAS3GROOVE1\n    },\n    {\n        key: 'C',\n        mp3: SilentStar\n    },\n];\n\n\nclass App extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            playArray: new Map(),\n            stateMode: false,\n            play:false,\n            musicLoop: setInterval(undefined, undefined, undefined),\n            song:\"\",\n        };\n        this.addToQue = this.addToQue.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.onPlay = this.onPlay.bind(this);\n        this.onStop = this.onStop.bind(this);\n    }\n    //Handle main state mode Switch. (On/Off)\n    handleChange() {\n        this.setState({\n            stateMode:!this.state.stateMode,\n        },()=>{\n            this.onStop()\n        })\n    }\n\n    //Play/Stop function will be using in forEach function when iterate main map.\n    playIt = (value) => {\n        console.log(\"In playIt\",this.state.playArray)\n        value.play()\n    }\n    stopIt = (value) => {\n        console.log(\"In stopIt\",this.state.playArray)\n        value.pause();\n    }\n\n        onPlay() {\n        console.log(\"on play\",this.state.playArray)\n        this.setState({\n            play:true,\n        },() => {\n            //First loop until interval get start\n            console.log(\"First loop\")\n            this.state.playArray.forEach(this.playIt)\n            //Set interval in state for accessibility to clear it from other functions.\n            this.setState({musicLoop: setInterval(() => {\n                    const iterator1 = this.state.playArray[Symbol.iterator]();\n                    for (const sound of iterator1) {\n                        sound[1].play()\n                    }\n                    console.log(\"Loop\")\n                }, 8200)})\n        })\n    }\n\n    onStop(src) {\n        this.setState({\n            play:false,\n        },() => {\n            //Clear main interval\n            clearInterval(this.state.musicLoop)\n            //Stop all active sounds\n            this.state.playArray.forEach(this.stopIt)\n        })\n    }\n\n    //Add sound to map if dosnt exist else - stop and remove it.\n    addToQue(songUrl) {\n        if (this.state.playArray.has(songUrl)) {\n            this.state.playArray.get(songUrl).pause()\n            this.state.playArray.delete(songUrl)\n            console.log( \"Sound removed\",this.state.playArray)\n        } else {\n            this.state.playArray.set(songUrl,new Audio(songUrl))\n            console.log(\"Sound added\",this.state.playArray)\n        }\n    }\n\nrender() {\n        return (\n            <div id=\"display\"   style={{\n                position: 'absolute', left: '50%', top: '50%',\n                transform: 'translate(-50%, -50%)'\n            }} className=\"display\">\n                <div>\n                    <Switch onChange={this.handleChange} checked={this.state.stateMode}/>\n                    {/*Conditional rendering for css settings -> rendering on/off buttons */}\n                    {this.state.stateMode\n                        ? <div className=\"play\">\n                            <button disabled={this.state.play} onClick = {this.onPlay}> Play </button>\n                            <button disabled={!this.state.play} onClick= {this.onStop}> Stop </button>\n                        </div>\n                        :\"\"\n                    }\n                    <h1>Looper</h1>\n\n                    {/*Conditional rendering for css settings. */}\n                    {this.state.stateMode\n                        ?                     <div className=\"display1\" div>\n                            {sounds.map((sound, idx) => (\n                                <DrumPad stateMode = {this.state.stateMode}playArray = {this.state.playArray} addToQue={this.addToQue}  key={idx} audio={sound.mp3}/>\n                            ))}\n                        </div>\n                        :                     <div className=\"display2\" div>\n                            {sounds.map((sound, idx) => (\n                                <DrumPad stateMode = {this.state.stateMode}playArray = {this.state.playArray}  addToQue={this.addToQue}  key={idx} audio={sound.mp3}/>\n                            ))}\n                        </div>\n                    }\n                </div>\n\n            </div>\n        );\n    }\n}\nexport default App;\n","export default __webpack_public_path__ + \"static/media/GrooveB_120bpm_Tanggu.3e1411b4.mp3\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}